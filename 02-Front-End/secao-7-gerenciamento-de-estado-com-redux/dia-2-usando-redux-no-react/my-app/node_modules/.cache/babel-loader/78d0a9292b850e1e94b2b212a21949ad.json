{"ast":null,"code":"// reducers/myReducer.js\nconst INITIAL_STATE = {\n  state: ''\n};\n\nfunction myReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'NEW_ACTION':\n      return {\n        state: action.state\n      };\n    // Nesse caso, a utilização do spread operator (...) não é necessária, pois estamos trabalhando com uma única chave no estado.\n    // Mas, caso tenha dúvidas sobre a utilização, consulte a documentação do Redux https://redux.js.org/recipes/using-object-spread-operator\n\n    default:\n      return state;\n  }\n}\n\nexport default myReducer;","map":{"version":3,"names":["INITIAL_STATE","state","myReducer","action","type"],"sources":["/home/natalia/TRYBE/trybe-exercicios/02-Front-End/secao-7-gerenciamento-de-estado-com-redux/dia-2-usando-redux-no-react/my-app/src/reducers/myReducer.js"],"sourcesContent":["\n// reducers/myReducer.js\n\nconst INITIAL_STATE = {\n  state: '',\n};\n\nfunction myReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'NEW_ACTION':\n      return { state: action.state };\n      // Nesse caso, a utilização do spread operator (...) não é necessária, pois estamos trabalhando com uma única chave no estado.\n      // Mas, caso tenha dúvidas sobre a utilização, consulte a documentação do Redux https://redux.js.org/recipes/using-object-spread-operator\n    default:\n      return state;\n  }\n}\n\nexport default myReducer;\n"],"mappings":"AACA;AAEA,MAAMA,aAAa,GAAG;EACpBC,KAAK,EAAE;AADa,CAAtB;;AAIA,SAASC,SAAT,GAAkD;EAAA,IAA/BD,KAA+B,uEAAvBD,aAAuB;EAAA,IAARG,MAAQ;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,YAAL;MACE,OAAO;QAAEH,KAAK,EAAEE,MAAM,CAACF;MAAhB,CAAP;IACA;IACA;;IACF;MACE,OAAOA,KAAP;EANJ;AAQD;;AAED,eAAeC,SAAf"},"metadata":{},"sourceType":"module"}